{"version":3,"sources":["../src/index.js"],"names":["storageDir","join","__dirname","storageConfig","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","storage","PORT","app","server","createServer","use","exposedHeaders","json","limit","set","err","db","console","log","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAGA;AACA,IAAMA,aAAa,eAAKC,IAAL,CAAUC,SAAV,EAAoB,aAApB,CAAnB;;AAEA,IAAMC,gBAAgB,iBAAOC,WAAP,CAAmB;AACrCC,iBAAa,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAiB;AAC1BA,WAAG,IAAH,EAASR,UAAT;AACH,KAHoC;AAIrCS,cAAU,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAiB;AACvBA,WAAG,IAAH,EAASE,KAAKC,GAAL,KAAa,eAAKC,OAAL,CAAaL,KAAKM,YAAlB,CAAtB;AACH;AANoC,CAAnB,CAAtB;AAQA,IAAMC,SAAS,sBAAO,EAACC,SAASZ,aAAV,EAAP,CAAf;;AAKA,IAAMa,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;;AAIAJ,IAAIG,GAAJ,CAAQ,qBAAWE,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIAN,IAAIO,GAAJ,CAAQ,MAAR,EAAgBtB,SAAhB;AACAe,IAAIO,GAAJ,CAAQ,YAAR,EAAsBxB,UAAtB;AACAiB,IAAIO,GAAJ,CAAQ,QAAR,EAAkBV,MAAlB;;AAGA;AACA,uBAAQ,UAACW,GAAD,EAAKC,EAAL,EAAU;AACd,QAAGD,GAAH,EAAO;AACHE,gBAAQC,GAAR,CAAY,wBAAZ,EAAsCH,GAAtC;AACH,KAFD,MAGK;AACDR,YAAIO,GAAJ,CAAQ,IAAR,EAAcE,EAAd;;AAEA;AACA,6BAAcT,GAAd;;AAEAA,YAAIC,MAAJ,CAAWW,MAAX,CAAkBC,QAAQC,GAAR,CAAYf,IAAZ,IAAoBA,IAAtC,EAA4C,YAAI;AAC5CW,oBAAQC,GAAR,6BAAsCX,IAAIC,MAAJ,CAAWc,OAAX,GAAqBC,IAA3D;AACH,SAFD;AAGH;AACJ,CAdD;;kBAkBehB,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport {connect} from './database';\nimport AppRouter from './routers/router';\nimport multer from 'multer';\nimport path from 'path';\n\n\n//File storage config\nconst storageDir = path.join(__dirname,'/../storage');\n\nconst storageConfig = multer.diskStorage({\n    destination: (req, file, cb)=>{\n        cb(null, storageDir)\n    },\n    filename: (req, file, cb)=>{\n        cb(null, Date.now() + path.extname(file.originalname));\n    }\n});\nconst upload = multer({storage: storageConfig});\n\n\n\n\nconst PORT = 3000;\nconst app = express();\napp.server = http.createServer(app);\n\napp.use(morgan('dev'));\n\napp.use(cors({\n    exposedHeaders: \"*\"\n}));\n\napp.use(bodyParser.json({\n    limit: '50mb'\n}));\n\napp.set('root', __dirname);\napp.set('storageDir', storageDir);\napp.set('upload', upload);\n\n\n//connect to database\nconnect((err,db)=>{\n    if(err){\n        console.log('mongodb server error: ', err);\n    }\n    else {\n        app.set('db', db);\n\n        //init router\n        new AppRouter(app);\n\n        app.server.listen(process.env.PORT || PORT, ()=>{\n            console.log(`App is running on port ${app.server.address().port}`);\n        });\n    }\n})\n\n\n\nexport default app;"]}